{"version":3,"sources":["riddles.js","RiddlePage.jsx","App.jsx","index.jsx"],"names":["riddleTexts","riddleText","answerPhoto","answerPhoto2","RiddlePage","num","open","setOpen","riddleNum","useState","imgName","setImgName","className","onClick","riddles","src","IntroCard","App","currPage","setCurrPage","useEffect","Array","length","map","e","i","key","ReactDOM","render","document","getElementById"],"mappings":"yMAKMA,G,MAAc,CAAC,+bAAD,mmNA6EL,GACb,CACEC,WAAYD,EAAY,GACxBE,YAAa,oDAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,kCAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,kCAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,oFAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,0DAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,0DAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,8CAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,kCAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,oDAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,+CAEf,CACED,WAAYD,EAAY,IACxBE,YAAa,yFACbC,aAAc,mEC9EHC,EA7CI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QACzBC,EAAYH,EAAM,EADqB,EAEfI,mBAAS,eAFM,mBAEtCC,EAFsC,KAE7BC,EAF6B,KAI7C,OACE,yBAAKC,UAAWN,EAAO,YAAc,QACnC,yBAAKM,UAAU,gBACb,yBAAKA,UAAU,eACb,uBACEA,UAAU,oDACVC,QAAS,WACPN,GAAQ,GACRI,EAAW,iBAGZG,EAAQN,GAAWL,aAAe,mCAAY,kCAEhDW,EAAQN,GAAWL,cAClB,uBACES,UAAU,oDACVC,QAAS,WACPN,GAAQ,GACRI,EAAW,kBAJf,qCAYJ,2BAAIG,EAAQN,GAAWP,aAEzB,yBAAKW,UAAWN,EAAO,mBAAqB,eAC1C,uBACEM,UAAU,4DACVC,QAAS,kBAAMN,GAAQ,KAEvB,uBAAGK,UAAU,kBAAb,UAEF,yBAAKG,IAAG,iCAA4BD,EAAQN,GAAWE,SCpCzDM,EAAY,WAChB,OACE,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,2BACb,2BFVc,qaE2EPK,EA3DH,WAAO,IAAD,EACgBR,mBAAS,GADzB,mBACTS,EADS,KACCC,EADD,OAEQV,oBAAS,GAFjB,mBAETH,EAFS,KAEHC,EAFG,KAMhB,OAFAa,qBAAU,kBAAMb,GAAQ,KAAQ,CAACW,IAG/B,yBAAKN,UAAU,OACZM,EACC,kBAAC,EAAD,CAAYb,IAAKa,EAAUZ,KAAMA,EAAMC,QAASA,IAEhD,kBAAC,EAAD,MAGF,wBAAIK,UAAU,cACZ,wBAAIA,UAAWM,EAAW,eAAiB,YACzC,uBAAGL,QAAS,kBAAMK,EAAW,GAAKC,EAAYD,EAAW,KACvD,uBAAGN,UAAU,kBAAb,kBAGJ,wBAAIA,UAAwB,IAAbM,EAAiB,SAAW,gBACzC,uBAAGL,QAAS,kBAAMM,EAAY,KAA9B,yCAGD,YAAIE,MAAMP,EAAQQ,SAASC,KAAI,SAACC,EAAGC,GAClC,IAAMpB,EAAMoB,EAAI,EAChB,OACE,wBACEb,UAAWM,IAAab,EAAM,SAAW,eACzCqB,IAAKrB,GAEL,uBACEQ,QAAS,WAEP,OADAM,EAAYd,IACL,IAGRA,OAMT,wBACEO,UAAWM,IAAaJ,EAAQQ,OAAS,WAAa,gBAEtD,uBACET,QAAS,kBACPK,EAAWJ,EAAQQ,QAAUH,EAAYD,EAAW,KAGtD,uBAAGN,UAAU,kBAAb,sBC/DZe,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.874c4935.chunk.js","sourcesContent":["export const introText = `Я задам тебе загадку\nТы придумаешь отгадку\nЭто слово лишь одно,\nНо рифмуется оно.`;\n\nconst riddleTexts = [\n  `Если хочешь ты читать,\nТы должна все буквы знать.\nИх в порядке все хранит\nВ одном месте _______.`,\n\n  `Помидоры, огурцы\nПосадила с мамой ты,\nБаклажаны, сельдерей\nМножество других вещей,\nНо засохнут все они\nЕсли нет в земле _____.`,\n\n  `Во дворе темным-темно\nНе видать там ничего,\nНо нам лампа не нужна\nЕсли в небе есть ____.`,\n\n  `Что ни лает, ни кусает,\nНо и в дом нас не пускает.\nЧтобы в дом нам свой войти\nМы должны иметь _____ _ ______.`,\n\n  `Крыльев нету у него,\nНо летает хорошо.\nБез разбега его взлёт\nЭта птица ________.`,\n\n  `Хоть я в зеркало смотрю\nНо себя не узнаю\nСмотрит на меня павлин\nВидно праздник ________.`,\n\n  `В небе солнышко сияет\nТолько что была гроза,\nРазноцветным полукругом\nДаже выше, чем гора\nВ небе ______ видна.`,\n\n  `Она не мурлыкает и не чирикает,\nОна и не лает, и не рычит,\nОна не мычит и не кукарекает,\nОна почему-то всё время молчит.\nНо странно ещё что её голова\nК телу без шеи прикреплена.\nОна рифмуется со словом глыба\nУже догадалась ты, что это ____.`,\n\n  `Есть зелёные ребятки\nВсе они растут на грядке\nОчень дружная семья\nИх разнять почти нельзя\nГде недавно было пусто\nТам сейчас растёт _______.`,\n\n  `Что такое – две ноги,\nНи руки, ни головы.\nС ним в мозаику играешь\nИ крупинки собираешь.\nОн поможет выбрать цвет\nНазывается ______.`,\n\n  `С ним рассталась ты вчера\nИ не встретишь никогда\nЦелый год ты с ним была,\nОн был третий у тебя,\nНо сейчас пришёл четвёртый\nИ ты будешь с ним опять\nЦелый год дружить, играть,\nНо как только год пройдёт,\nТо и этот друг уйдёт,\nТак меняются друзья\nНа твой _____ ________\nДогадалась кто уйдёт\nПравильно, твой ______ ___.`,\n];\n\nexport default [\n  {\n    riddleText: riddleTexts[0],\n    answerPhoto: \"1_алфавит.jpg\",\n  },\n  {\n    riddleText: riddleTexts[1],\n    answerPhoto: \"2_вода.jpg\",\n  },\n  {\n    riddleText: riddleTexts[2],\n    answerPhoto: \"3_луна.jpg\",\n  },\n  {\n    riddleText: riddleTexts[3],\n    answerPhoto: \"4_замок_с_ключом.jpg\",\n  },\n  {\n    riddleText: riddleTexts[4],\n    answerPhoto: \"5_вертолёт.jpg\",\n  },\n  {\n    riddleText: riddleTexts[5],\n    answerPhoto: \"6_халловин.jpg\",\n  },\n  {\n    riddleText: riddleTexts[6],\n    answerPhoto: \"7_радуга.jpg\",\n  },\n  {\n    riddleText: riddleTexts[7],\n    answerPhoto: \"8_рыба.jpg\",\n  },\n  {\n    riddleText: riddleTexts[8],\n    answerPhoto: \"9_капуста.jpg\",\n  },\n  {\n    riddleText: riddleTexts[9],\n    answerPhoto: \"10_пинцет.jpg\",\n  },\n  {\n    riddleText: riddleTexts[10],\n    answerPhoto: \"11_денрь_рождения.jpg\",\n    answerPhoto2: \"11_Третий_год.jpg\",\n  },\n];\n","import React, { useState } from \"react\";\nimport riddles from \"./riddles\";\n\nconst RiddlePage = ({ num, open, setOpen }) => {\n  const riddleNum = num - 1;\n  const [imgName, setImgName] = useState(\"answerPhoto\");\n\n  return (\n    <div className={open ? \"card open\" : \"card\"}>\n      <div className=\"card-content\">\n        <div className=\"answer-btns\">\n          <a\n            className=\"waves-effect waves-light btn right green darken-1\"\n            onClick={() => {\n              setOpen(true);\n              setImgName(\"answerPhoto\");\n            }}\n          >\n            {riddles[riddleNum].answerPhoto2 ? \"Ответ 1\" : \"Ответ\"}\n          </a>\n          {riddles[riddleNum].answerPhoto2 && (\n            <a\n              className=\"waves-effect waves-light btn right green darken-1\"\n              onClick={() => {\n                setOpen(true);\n                setImgName(\"answerPhoto2\");\n              }}\n            >\n              Ответ 2\n            </a>\n          )}\n        </div>\n\n        <p>{riddles[riddleNum].riddleText}</p>\n      </div>\n      <div className={open ? \"card-reveal open\" : \"card-reveal\"}>\n        <a\n          className=\"btn-floating btn-large waves-effect waves-light red right\"\n          onClick={() => setOpen(false)}\n        >\n          <i className=\"material-icons\">close</i>\n        </a>\n        <img src={`/RiddlesForElla/images/${riddles[riddleNum][imgName]}`} />\n      </div>\n    </div>\n  );\n};\n\nexport default RiddlePage;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport RiddlePage from \"./RiddlePage\";\nimport { introText } from \"./riddles\";\nimport riddles from \"./riddles\";\n\nconst IntroCard = () => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-content black-text\">\n        <p>{introText}</p>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [currPage, setCurrPage] = useState(0);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => setOpen(false), [currPage]);\n\n  return (\n    <div className=\"App\">\n      {currPage ? (\n        <RiddlePage num={currPage} open={open} setOpen={setOpen} />\n      ) : (\n        <IntroCard />\n      )}\n\n      <ul className=\"pagination\">\n        <li className={currPage ? \"waves-effect\" : \"disabled\"}>\n          <a onClick={() => currPage > 0 && setCurrPage(currPage - 1)}>\n            <i className=\"material-icons\">chevron_left</i>\n          </a>\n        </li>\n        <li className={currPage === 0 ? \"active\" : \"waves-effect\"}>\n          <a onClick={() => setCurrPage(0)}>Начало</a>\n        </li>\n\n        {[...Array(riddles.length)].map((e, i) => {\n          const num = i + 1;\n          return (\n            <li\n              className={currPage === num ? \"active\" : \"waves-effect\"}\n              key={num}\n            >\n              <a\n                onClick={() => {\n                  setCurrPage(num);\n                  return false;\n                }}\n              >\n                {num}\n              </a>\n            </li>\n          );\n        })}\n\n        <li\n          className={currPage === riddles.length ? \"disabled\" : \"waves-effect\"}\n        >\n          <a\n            onClick={() =>\n              currPage < riddles.length && setCurrPage(currPage + 1)\n            }\n          >\n            <i className=\"material-icons\">chevron_right</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}