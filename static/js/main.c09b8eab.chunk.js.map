{"version":3,"sources":["riddles.js","RiddlePage.jsx","App.jsx","index.jsx"],"names":["riddleTexts","riddleText","answerPhoto","RiddlePage","num","open","setOpen","className","onClick","riddles","src","IntroCard","App","useState","currPage","setCurrPage","useEffect","Array","length","map","e","i","key","ReactDOM","render","document","getElementById"],"mappings":"yMAKMA,G,MAAc,CAAC,scAAD,q3HAiDL,GACb,CACEC,WAAYD,EAAY,GACxBE,YAAa,oDAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,kCAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,kCAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,wCAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,0DAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,0DAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,8CAEf,CACED,WAAYD,EAAY,GACxBE,YAAa,mCCzDFC,EAzBI,SAAC,GAA4B,IAA1BC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAC/B,OACE,yBAAKC,UAAWF,EAAO,YAAc,QACnC,yBAAKE,UAAU,gBACb,uBACEA,UAAU,oDACVC,QAAS,kBAAMF,GAAQ,KAFzB,kCAMA,2BAAIG,EAAQL,EAAM,GAAGH,aAEvB,yBAAKM,UAAWF,EAAO,mBAAqB,eAC1C,uBACEE,UAAU,4DACVC,QAAS,kBAAMF,GAAQ,KAEvB,uBAAGC,UAAU,kBAAb,UAEF,yBAAKG,IAAG,iCAA4BD,EAAQL,EAAM,GAAGF,kBChBvDS,EAAY,WAChB,OACE,yBAAKJ,UAAU,QACb,yBAAKA,UAAU,2BACb,2BFVc,qaE2EPK,EA3DH,WAAO,IAAD,EACgBC,mBAAS,GADzB,mBACTC,EADS,KACCC,EADD,OAEQF,oBAAS,GAFjB,mBAETR,EAFS,KAEHC,EAFG,KAMhB,OAFAU,qBAAU,kBAAMV,GAAQ,KAAQ,CAACQ,IAG/B,yBAAKP,UAAU,OACZO,EACC,kBAAC,EAAD,CAAYV,IAAKU,EAAUT,KAAMA,EAAMC,QAASA,IAEhD,kBAAC,EAAD,MAGF,wBAAIC,UAAU,cACZ,wBAAIA,UAAWO,EAAW,eAAiB,YACzC,uBAAGN,QAAS,kBAAMM,EAAW,GAAKC,EAAYD,EAAW,KACvD,uBAAGP,UAAU,kBAAb,kBAGJ,wBAAIA,UAAwB,IAAbO,EAAiB,SAAW,gBACzC,uBAAGN,QAAS,kBAAMO,EAAY,KAA9B,UAGD,YAAIE,MAAMR,EAAQS,SAASC,KAAI,SAACC,EAAGC,GAClC,IAAMjB,EAAMiB,EAAI,EAChB,OACE,wBACEd,UAAWO,IAAaV,EAAM,SAAW,eACzCkB,IAAKlB,GAEL,uBACEI,QAAS,WAEP,OADAO,EAAYX,IACL,IAGRA,OAMT,wBACEG,UAAWO,IAAaL,EAAQS,OAAS,WAAa,gBAEtD,uBACEV,QAAS,kBACPM,EAAWL,EAAQS,QAAUH,EAAYD,EAAW,KAGtD,uBAAGP,UAAU,kBAAb,sBC/DZgB,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,U","file":"static/js/main.c09b8eab.chunk.js","sourcesContent":["export const introText = `Я задам тебе загадку\nТы придумаешь отгадку\nЭто слово лишь одно,\nНо рифмуется оно.`;\n\nconst riddleTexts = [\n  `Чтобы книжку прочитать\nНадо нам все буквы знать\nБуквы вместе все хранит\nВ одном месте _______`,\n\n  `Помидоры, огурцы\nПосадила с мамой ты,\nБаклажаны, сельдерей\nМножество других вещей,\nНо засохнут все они\nЕсли нет в земле _____`,\n\n  `Во дворе темным темно\nНам не видно ничего,\nНо нам лампа не нужна\nЕсли в небе ест ____`,\n\n  `Что ни лает, ни кусает,\nНо и в дом нас не пускает.\nЧтобы в дом нам свой войти\nМы должны иметь _____`,\n\n  `Крыльев нету у него,\nНо летает хорошо.\nБез разбега его взлёт\nЭта птица ________`,\n\n  `Хоть я в зеркало смотрю\nНо себя не узнаю\nСмотрит на меня павлин\nВидно праздник ________`,\n\n  `В небе солнышко сияет\nТолько что была гроза,\nИ красивым полукругом\nДаже выше, чем гора\nВ небе ______ видна.`,\n\n  `Она не мурлыкает и не чирикает,\nОна и не лает, и не рычит,\nОна не мычит и не кукарекает,\nОна почему-то всё время молчит.\nНо странно ещё что её голова\nК телу без шеи прикреплена.\nЕё рифмовать можно со словом глыба\nУже догадалась ты, что это ____`,\n];\n\nexport default [\n  {\n    riddleText: riddleTexts[0],\n    answerPhoto: \"1_алфавит.jpg\",\n  },\n  {\n    riddleText: riddleTexts[1],\n    answerPhoto: \"2_вода.jpg\",\n  },\n  {\n    riddleText: riddleTexts[2],\n    answerPhoto: \"3_луна.jpg\",\n  },\n  {\n    riddleText: riddleTexts[3],\n    answerPhoto: \"4_ключи.jpg\",\n  },\n  {\n    riddleText: riddleTexts[4],\n    answerPhoto: \"5_вертолёт.jpg\",\n  },\n  {\n    riddleText: riddleTexts[5],\n    answerPhoto: \"6_халловин.jpg\",\n  },\n  {\n    riddleText: riddleTexts[6],\n    answerPhoto: \"7_радуга.jpg\",\n  },\n  {\n    riddleText: riddleTexts[7],\n    answerPhoto: \"8_рыба.jpg\",\n  },\n];\n","import React from \"react\";\nimport riddles from \"./riddles\";\n\nconst RiddlePage = ({ num, open, setOpen }) => {\n  return (\n    <div className={open ? \"card open\" : \"card\"}>\n      <div className=\"card-content\">\n        <a\n          className=\"waves-effect waves-light btn right green darken-1\"\n          onClick={() => setOpen(true)}\n        >\n          Ответ\n        </a>\n        <p>{riddles[num - 1].riddleText}</p>\n      </div>\n      <div className={open ? \"card-reveal open\" : \"card-reveal\"}>\n        <a\n          className=\"btn-floating btn-large waves-effect waves-light red right\"\n          onClick={() => setOpen(false)}\n        >\n          <i className=\"material-icons\">close</i>\n        </a>\n        <img src={`/RiddlesForElla/images/${riddles[num - 1].answerPhoto}`} />\n      </div>\n    </div>\n  );\n};\n\nexport default RiddlePage;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport RiddlePage from \"./RiddlePage\";\nimport { introText } from \"./riddles\";\nimport riddles from \"./riddles\";\n\nconst IntroCard = () => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-content black-text\">\n        <p>{introText}</p>\n      </div>\n    </div>\n  );\n};\n\nconst App = () => {\n  const [currPage, setCurrPage] = useState(0);\n  const [open, setOpen] = useState(false);\n\n  useEffect(() => setOpen(false), [currPage]);\n\n  return (\n    <div className=\"App\">\n      {currPage ? (\n        <RiddlePage num={currPage} open={open} setOpen={setOpen} />\n      ) : (\n        <IntroCard />\n      )}\n\n      <ul className=\"pagination\">\n        <li className={currPage ? \"waves-effect\" : \"disabled\"}>\n          <a onClick={() => currPage > 0 && setCurrPage(currPage - 1)}>\n            <i className=\"material-icons\">chevron_left</i>\n          </a>\n        </li>\n        <li className={currPage === 0 ? \"active\" : \"waves-effect\"}>\n          <a onClick={() => setCurrPage(0)}>Intro</a>\n        </li>\n\n        {[...Array(riddles.length)].map((e, i) => {\n          const num = i + 1;\n          return (\n            <li\n              className={currPage === num ? \"active\" : \"waves-effect\"}\n              key={num}\n            >\n              <a\n                onClick={() => {\n                  setCurrPage(num);\n                  return false;\n                }}\n              >\n                {num}\n              </a>\n            </li>\n          );\n        })}\n\n        <li\n          className={currPage === riddles.length ? \"disabled\" : \"waves-effect\"}\n        >\n          <a\n            onClick={() =>\n              currPage < riddles.length && setCurrPage(currPage + 1)\n            }\n          >\n            <i className=\"material-icons\">chevron_right</i>\n          </a>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}